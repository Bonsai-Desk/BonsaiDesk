{"version":3,"sources":["pages/YouTube.jsx","App.jsx","index.jsx"],"names":["PlayerState","showState","state","name","Video","props","query","URLSearchParams","location","search","xRes","parseInt","get","yRes","opts","width","window","innerWidth","height","innerHeight","playerVars","autoplay","controls","disablekb","rel","history","useHistory","dev_mode","pathname","split","match","params","id","timeStamp","useState","player","setPlayer","init","setInit","ready","setReady","readying","setReadying","justBuffered","setJustBuffered","postStateChange","useCallback","message","console","log","vuplex","postMessage","type","current_time","getCurrentTime","readyUp","_timeStamp","Math","abs","getPlayerState","prepareToReadyUp","playVideo","seekTo","pauseVideo","unMute","_player","mute","useEffect","playerListeners","event","json","JSON","parse","data","command","addEventListener","removeEventListener","pingPlayerTime","setInterval","clearInterval","onClick","push","onReady","target","loadVideoById","parseFloat","onError","onStateChange","Boot","navListeners","path","stringify","_","Home","App","className","exact","component","YouTube","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24177784.chunk.js","sourcesContent":["import YouTube from \"react-youtube\";\r\nimport React, {useState, useEffect, useCallback} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst PlayerState = {\r\n    UNSTARTED: -1,\r\n    ENDED: 0,\r\n    PLAYING: 1,\r\n    PAUSED: 2,\r\n    BUFFERING: 3,\r\n    CUED: 5,\r\n};\r\n\r\nlet showState = (state) => {\r\n    let name;\r\n    switch (state) {\r\n        case -1:\r\n            name = \"unstarted\"\r\n            break;\r\n        case 0:\r\n            name = \"ended\"\r\n            break;\r\n        case 1:\r\n            name = \"playing\"\r\n            break;\r\n        case 2:\r\n            name = \"paused\"\r\n            break;\r\n        case 3:\r\n            name = \"buffering\"\r\n            break;\r\n        case 5:\r\n            name = \"cued\"\r\n            break;\r\n        default:\r\n            name = \"BAD SWITCH STATE\"\r\n    }\r\n    return name\r\n\r\n}\r\n\r\nlet Video = (props) => {\r\n    let query = new URLSearchParams(props.location.search)\r\n\r\n    let xRes = parseInt(query.get(\"x\"));\r\n    let yRes = parseInt(query.get(\"y\"));\r\n\r\n    let opts = {\r\n        width: xRes && yRes ? xRes : window.innerWidth,\r\n        height: xRes && yRes ? yRes : window.innerHeight,\r\n        playerVars: {\r\n            autoplay: 0,\r\n            controls: 0,\r\n            disablekb: 1,\r\n            rel: 0\r\n        }\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    let dev_mode = props.location.pathname.split(\"/\")[1] === \"youtube_test\";\r\n\r\n    let {id, timeStamp} = props.match.params;\r\n\r\n//    let [masked, setMasked] = useState(true)\r\n\r\n    let [player, setPlayer] = useState(null);\r\n    let [init, setInit] = useState(false);\r\n\r\n    // this is the 'I'm ready at a timestamp' 'ready', not the 'player is ready' of 'onReady'\r\n    let [ready, setReady] = useState(false);\r\n    let [readying, setReadying] = useState(false);\r\n    let [justBuffered, setJustBuffered] = useState(false);\r\n\r\n    let postStateChange = useCallback((message) => {\r\n        if (message !== \"READY\") setReady(false);\r\n        console.log(\"POST \" + message)\r\n        if (!dev_mode) {\r\n            window.vuplex.postMessage({type: \"stateChange\", message: message, current_time: player.getCurrentTime()});\r\n        }\r\n    }, [player, dev_mode])\r\n\r\n    let readyUp = useCallback((_timeStamp) => {\r\n        if (player == null) {\r\n            console.log(\"bonsai: ignoring attempt to ready up while player is null\")\r\n            return;\r\n        }\r\n\r\n        if (ready && Math.abs(player.getCurrentTime() - _timeStamp) < 0.01) {\r\n            console.log(\"bonsai: ready-up called while ready\")\r\n            postStateChange(\"READY\")\r\n            return;\r\n        }\r\n\r\n        let state = player.getPlayerState();\r\n\r\n        if (!init) {\r\n            console.log(\"bonsai: ignoring attempt to ready-up before init\")\r\n        } else {\r\n            console.log(\"bonsai: readying up from \" + showState(state) + \" -> \" + _timeStamp)\r\n            prepareToReadyUp(player);\r\n            if (state === PlayerState.PAUSED) {\r\n                player.playVideo();\r\n            }\r\n            player.seekTo(_timeStamp, true)\r\n            player.pauseVideo()\r\n            player.unMute();\r\n        }\r\n\r\n    }, [init, player, postStateChange, ready])\r\n\r\n    let prepareToReadyUp = (_player) => {\r\n        console.log(\"bonsai: prepare to ready up\")\r\n        setReady(false)\r\n        setReadying(true)\r\n        _player.mute();\r\n    }\r\n\r\n    let onReady = (event) => {\r\n        // load the player to the url timestamp when ready\r\n        let _player = event.target;\r\n        setPlayer(_player);\r\n        prepareToReadyUp(_player)\r\n        _player.loadVideoById(id, parseFloat(timeStamp));\r\n    }\r\n    let onError = (event) => {\r\n        console.log(\"bonsai youtube error: \" + event)\r\n    }\r\n\r\n    function handleCued() {\r\n        console.log(\"bonsai: \" + showState(player.getPlayerState()));\r\n    }\r\n\r\n    function handleUnstarted() {\r\n        console.log(\r\n            \"bonsai: \" +\r\n            showState(player.getPlayerState()) + \" \" +\r\n            player.getCurrentTime()\r\n        )\r\n    }\r\n\r\n    function handleEnded() {\r\n        console.log(\"bonsai: \" + showState(player.getPlayerState()));\r\n        postStateChange(\"ENDED\")\r\n    }\r\n\r\n    function handlePlaying() {\r\n        if (init) {\r\n            if (readying) {\r\n                console.log(\"bonsai: while readying -> play\")\r\n            } else {\r\n                if (justBuffered) {\r\n                    console.log(\"bonsai: playing after buffer\")\r\n                } else {\r\n                    console.log(\"bonsai: playing\")\r\n                }\r\n                postStateChange(\"PLAYING\")\r\n            }\r\n        } else {\r\n            player.pauseVideo()\r\n        }\r\n        if (justBuffered) {\r\n            setJustBuffered(false);\r\n        }\r\n    }\r\n\r\n    function handlePaused() {\r\n        if (init) {\r\n            if (justBuffered) {\r\n                if (readying && !ready) {\r\n                    console.log(\"bonsai: ready (pause after buffer)\")\r\n                    setReady(true);\r\n                    setReadying(false);\r\n                    postStateChange(\"READY\")\r\n                } else {\r\n                    console.log(\"bonsai: paused after buffering\")\r\n                    postStateChange(\"PAUSED\")\r\n                }\r\n            } else {\r\n                if (readying) {\r\n                    console.log(\"bonsai: while readying -> paused\")\r\n                } else {\r\n                    console.log(\"bonsai: paused\");\r\n                    postStateChange(\"PAUSED\");\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"bonsai: init complete\")\r\n            player.seekTo(timeStamp, true)\r\n            player.unMute();\r\n            setInit(true)\r\n            setReady(true)\r\n            setReadying(false)\r\n            postStateChange(\"READY\")\r\n        }\r\n        if (justBuffered) {\r\n            setJustBuffered(false);\r\n        }\r\n    }\r\n\r\n    function handleBuffering() {\r\n        if (readying) {\r\n            console.log(\"bonsai: while readying -> buffering\")\r\n        } else {\r\n            console.log(\"bonsai: buffering\")\r\n        }\r\n        setJustBuffered(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (player == null || dev_mode) {\r\n            return;\r\n        }\r\n\r\n        let playerListeners = (event) => {\r\n            let json = JSON.parse(event.data)\r\n            if (json.type !== \"video\") {\r\n                return;\r\n            }\r\n            console.log(event.data)\r\n            switch (json.command) {\r\n                case \"play\":\r\n                    console.log(\"COMMAND: play\")\r\n                    player.playVideo()\r\n                    break;\r\n                case \"pause\":\r\n                    console.log(\"COMMAND: pause\")\r\n                    player.pauseVideo()\r\n                    break;\r\n                case \"readyUp\":\r\n                    console.log(\"COMMAND: readyUp\")\r\n                    readyUp(json.timeStamp)\r\n                    break;\r\n//               case \"maskOn\":\r\n//                   console.log(\"COMMAND: maskOn\")\r\n//                   setMasked(true)\r\n//                   break;\r\n//               case \"maskOff\":\r\n//                   console.log(\"COMMAND: maskOff\")\r\n//                   setMasked(false)\r\n//                   break;\r\n                default:\r\n                    console.log(\"command: not handled (video) \" + event.data)\r\n                    break;\r\n            }\r\n        }\r\n        window.vuplex.addEventListener('message', playerListeners)\r\n        return () => {\r\n            window.vuplex.removeEventListener('message', playerListeners)\r\n        }\r\n    }, [id, player, dev_mode, readyUp])\r\n    useEffect(() => {\r\n        console.log(\"bonsai: add ping interval\")\r\n        let pingPlayerTime = setInterval(() => {\r\n            let current_time = 0;\r\n            if (player != null && player.getCurrentTime() != null) {\r\n                current_time = player.getCurrentTime();\r\n            }\r\n            if (dev_mode) {\r\n                return;\r\n            }\r\n            window.vuplex.postMessage({\r\n                type: \"infoCurrentTime\",\r\n                current_time: current_time\r\n            })\r\n        }, 100)\r\n        return () => {\r\n            console.log(\"bonsai: remove ping interval\")\r\n            clearInterval(pingPlayerTime)\r\n        }\r\n    }, [id, player, dev_mode])\r\n//   useEffect (() => {\r\n//       if (ready && masked) {\r\n//           setMasked(false);\r\n//       }\r\n//   }, [ready, masked])\r\n\r\n    let onStateChange = (event) => {\r\n        switch (event.data) {\r\n            case PlayerState.CUED:\r\n                handleCued();\r\n                break;\r\n            case PlayerState.UNSTARTED:\r\n                handleUnstarted();\r\n                break;\r\n            case PlayerState.PLAYING:\r\n                handlePlaying();\r\n                break;\r\n            case PlayerState.PAUSED:\r\n                handlePaused();\r\n                break;\r\n            case PlayerState.BUFFERING:\r\n                handleBuffering();\r\n                break;\r\n            case PlayerState.ENDED:\r\n                handleEnded();\r\n                break;\r\n            default:\r\n                console.log(\"bonsai error: did not handle state change \" + event.data)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {dev_mode ?\r\n                <div>\r\n                    <p onClick={() => {\r\n                        history.push(\"/home\")\r\n                    }}>home</p>\r\n                    {\" \"}\r\n                    <p onClick={() => {\r\n                        readyUp(40)\r\n                    }}>ready up</p>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <YouTube\r\n//`                className={masked ? \"opacity-0\" : \"opacity-100\"}\r\n                opts={opts}\r\n                onReady={onReady}\r\n                onError={onError}\r\n                onStateChange={onStateChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video;","import React from \"react\";\r\nimport \"./assets/main.css\";\r\nimport {MemoryRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\r\nimport YouTube from \"./pages/YouTube\";\r\n\r\nlet Boot = () => {\r\n\r\n    console.log(\"Boot\")\r\n\r\n    let history = useHistory();\r\n\r\n    let navListeners = (event) => {\r\n\r\n        let json = JSON.parse(event.data);\r\n\r\n        if (json.type !== \"nav\") return;\r\n\r\n        switch (json.command) {\r\n            case \"push\":\r\n                console.log(\"command: nav \" + json.path)\r\n                history.push(json.path)\r\n                break;\r\n            default:\r\n                console.log(\"command: not handled (navListeners) \" + JSON.stringify(json))\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (window.vuplex != null) {\r\n\r\n        console.log(\"bonsai: vuplex is not null -> navListeners\")\r\n        window.vuplex.addEventListener('message', navListeners)\r\n\r\n    } else {\r\n        console.log(\"bonsai: vuplex is null\")\r\n        window.addEventListener('vuplexready', _ => {\r\n\r\n            console.log(\"bonsai: vuplexready -> navListeners\")\r\n            window.vuplex.addEventListener('message', navListeners)\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Boot\r\n            <p onClick={()=>{history.push(\"/youtube_test/qEfPBt9dU60/19.02890180001912?x=480&y=360\")}}>test video</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet Home = () => {\r\n    return <div>Home</div>\r\n}\r\n\r\nfunction App() {\r\n    console.log(\"App\")\r\n    return (\r\n        <Router>\r\n            <div className={\"bg-gray-800 h-screen text-green-400\"}>\r\n                <Switch>\r\n\r\n                    <Route exact path={\"/home\"} component={Home}/>\r\n\r\n                    <Route exact path={\"/youtube/:id/:timeStamp\"} component={YouTube}/>\r\n\r\n                    <Route exact path={\"/youtube_test/:id/:timeStamp\"} component={YouTube}/>\r\n\r\n                    <Route path={\"/\"} component={Boot}/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/main.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}