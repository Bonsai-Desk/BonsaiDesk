{"version":3,"sources":["pages/YouTube.jsx","pages/Spring.jsx","pages/Twitch.jsx","pages/Menu.jsx","App.jsx","index.jsx","utilities.js"],"names":["PlayerState","showState","state","name","Video","props","query","URLSearchParams","location","search","xRes","parseInt","get","yRes","opts","width","window","innerWidth","height","innerHeight","playerVars","autoplay","controls","disablekb","rel","history","useHistory","dev_mode","pathname","split","match","params","id","timeStamp","useState","player","setPlayer","init","setInit","ready","setReady","readying","setReadying","justBuffered","setJustBuffered","postStateChange","useCallback","message","console","log","vuplex","postMessage","type","current_time","getCurrentTime","readyUp","_timeStamp","Math","abs","getPlayerState","prepareToReadyUp","playVideo","seekTo","pauseVideo","unMute","_player","mute","useEffect","playerListeners","event","json","JSON","parse","data","command","addEventListener","removeEventListener","pingPlayerTime","setInterval","clearInterval","onClick","push","onReady","target","loadVideoById","parseFloat","onError","onStateChange","Simple","useSpring","x","y","config","mass","tension","friction","set","bind","useDrag","down","movement","mx","my","className","div","style","Twitch","options","url","onProgress","played","loaded","playedSeconds","loadedSeconds","postMouseDown","postJson","Type","Message","postMouseUp","postHover","Button","onMouseDown","onMouseUp","onMouseEnter","children","ListItem","selected","handleClick","SettingsList","SettingsTitle","JoinDeskButton","char","MenuPage","pages","component","code","setCode","length","slice","buttonClass","Menu","active","setActive","SelectedPage","map","info","i","Boot","navListeners","path","stringify","genNavListeners","_","to","Home","App","Spring","YouTube","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.653d1ad9.chunk.js","sourcesContent":["import YouTube from \"react-youtube\";\r\nimport React, {useState, useEffect, useCallback} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst PlayerState = {\r\n    UNSTARTED: -1,\r\n    ENDED: 0,\r\n    PLAYING: 1,\r\n    PAUSED: 2,\r\n    BUFFERING: 3,\r\n    CUED: 5,\r\n};\r\n\r\nlet showState = (state) => {\r\n    let name;\r\n    switch (state) {\r\n        case -1:\r\n            name = \"unstarted\"\r\n            break;\r\n        case 0:\r\n            name = \"ended\"\r\n            break;\r\n        case 1:\r\n            name = \"playing\"\r\n            break;\r\n        case 2:\r\n            name = \"paused\"\r\n            break;\r\n        case 3:\r\n            name = \"buffering\"\r\n            break;\r\n        case 5:\r\n            name = \"cued\"\r\n            break;\r\n        default:\r\n            name = \"BAD SWITCH STATE\"\r\n    }\r\n    return name\r\n\r\n}\r\n\r\nlet Video = (props) => {\r\n    let query = new URLSearchParams(props.location.search)\r\n\r\n    let xRes = parseInt(query.get(\"x\"));\r\n    let yRes = parseInt(query.get(\"y\"));\r\n\r\n    let opts = {\r\n        width: xRes && yRes ? xRes : window.innerWidth,\r\n        height: xRes && yRes ? yRes : window.innerHeight,\r\n        playerVars: {\r\n            autoplay: 0,\r\n            controls: 0,\r\n            disablekb: 1,\r\n            rel: 0\r\n        }\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    let dev_mode = props.location.pathname.split(\"/\")[1] === \"youtube_test\";\r\n\r\n    let {id, timeStamp} = props.match.params;\r\n\r\n    let [player, setPlayer] = useState(null);\r\n    let [init, setInit] = useState(false);\r\n\r\n    // this is the 'I'm ready at a timestamp' 'ready', not the 'player is ready' of 'onReady'\r\n    let [ready, setReady] = useState(false);\r\n    let [readying, setReadying] = useState(false);\r\n    let [justBuffered, setJustBuffered] = useState(false);\r\n\r\n    let postStateChange = useCallback((message) => {\r\n        if (message !== \"READY\") setReady(false);\r\n        console.log(\"POST \" + message)\r\n        if (!dev_mode) {\r\n            window.vuplex.postMessage({type: \"stateChange\", message: message, current_time: player.getCurrentTime()});\r\n        }\r\n    }, [player, dev_mode])\r\n\r\n    let readyUp = useCallback((_timeStamp) => {\r\n        if (player == null) {\r\n            console.log(\"bonsai: ignoring attempt to ready up while player is null\")\r\n            return;\r\n        }\r\n\r\n        if (ready && Math.abs(player.getCurrentTime() - _timeStamp) < 0.01) {\r\n            console.log(\"bonsai: ready-up called while ready\")\r\n            postStateChange(\"READY\")\r\n            return;\r\n        }\r\n\r\n        let state = player.getPlayerState();\r\n\r\n        if (!init) {\r\n            console.log(\"bonsai: ignoring attempt to ready-up before init\")\r\n        } else {\r\n            console.log(\"bonsai: readying up from \" + showState(state) + \" -> \" + _timeStamp)\r\n            prepareToReadyUp(player);\r\n            if (state === PlayerState.PAUSED) {\r\n                player.playVideo();\r\n            }\r\n            player.seekTo(_timeStamp, true)\r\n            player.pauseVideo()\r\n            player.unMute();\r\n        }\r\n\r\n    }, [init, player, postStateChange, ready])\r\n\r\n    let prepareToReadyUp = (_player) => {\r\n        console.log(\"bonsai: prepare to ready up\")\r\n        setReady(false)\r\n        setReadying(true)\r\n        _player.mute();\r\n    }\r\n\r\n    let onReady = (event) => {\r\n        // load the player to the url timestamp when ready\r\n        let _player = event.target;\r\n        setPlayer(_player);\r\n        prepareToReadyUp(_player)\r\n        _player.loadVideoById(id, parseFloat(timeStamp));\r\n    }\r\n    let onError = (event) => {\r\n        console.log(\"bonsai youtube error: \" + event)\r\n    }\r\n\r\n    function handleCued() {\r\n        console.log(\"bonsai: \" + showState(player.getPlayerState()));\r\n    }\r\n\r\n    function handleUnstarted() {\r\n        console.log(\r\n            \"bonsai: \" +\r\n            showState(player.getPlayerState()) + \" \" +\r\n            player.getCurrentTime()\r\n        )\r\n    }\r\n\r\n    function handleEnded() {\r\n        console.log(\"bonsai: \" + showState(player.getPlayerState()));\r\n        postStateChange(\"ENDED\")\r\n    }\r\n\r\n    function handlePlaying() {\r\n        if (init) {\r\n            if (readying) {\r\n                console.log(\"bonsai: while readying -> play\")\r\n            } else {\r\n                if (justBuffered) {\r\n                    console.log(\"bonsai: playing after buffer\")\r\n                } else {\r\n                    console.log(\"bonsai: playing\")\r\n                }\r\n                postStateChange(\"PLAYING\")\r\n            }\r\n        } else {\r\n            player.pauseVideo()\r\n        }\r\n        if (justBuffered) {\r\n            setJustBuffered(false);\r\n        }\r\n    }\r\n\r\n    function handlePaused() {\r\n        if (init) {\r\n            if (justBuffered) {\r\n                if (readying && !ready) {\r\n                    console.log(\"bonsai: ready (pause after buffer)\")\r\n                    setReady(true);\r\n                    setReadying(false);\r\n                    postStateChange(\"READY\")\r\n                } else {\r\n                    console.log(\"bonsai: paused after buffering\")\r\n                    postStateChange(\"PAUSED\")\r\n                }\r\n            } else {\r\n                if (readying) {\r\n                    console.log(\"bonsai: while readying -> paused\")\r\n                } else {\r\n                    console.log(\"bonsai: paused\");\r\n                    postStateChange(\"PAUSED\");\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"bonsai: init complete\")\r\n            player.seekTo(timeStamp, true)\r\n            player.unMute();\r\n            setInit(true)\r\n            setReady(true)\r\n            setReadying(false)\r\n            postStateChange(\"READY\")\r\n        }\r\n        if (justBuffered) {\r\n            setJustBuffered(false);\r\n        }\r\n    }\r\n\r\n    function handleBuffering() {\r\n        if (readying) {\r\n            console.log(\"bonsai: while readying -> buffering\")\r\n        } else {\r\n            console.log(\"bonsai: buffering\")\r\n        }\r\n        setJustBuffered(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (player == null || dev_mode) {\r\n            return;\r\n        }\r\n\r\n        let playerListeners = (event) => {\r\n            let json = JSON.parse(event.data)\r\n            if (json.type !== \"video\") {\r\n                return;\r\n            }\r\n            console.log(event.data)\r\n            switch (json.command) {\r\n                case \"play\":\r\n                    console.log(\"COMMAND: play\")\r\n                    player.playVideo()\r\n                    break;\r\n                case \"pause\":\r\n                    console.log(\"COMMAND: pause\")\r\n                    player.pauseVideo()\r\n                    break;\r\n                case \"readyUp\":\r\n                    console.log(\"COMMAND: readyUp\")\r\n                    readyUp(json.timeStamp)\r\n                    break;\r\n                default:\r\n                    console.log(\"command: not handled (video) \" + event.data)\r\n                    break;\r\n            }\r\n        }\r\n        window.vuplex.addEventListener('message', playerListeners)\r\n        return () => {\r\n            window.vuplex.removeEventListener('message', playerListeners)\r\n        }\r\n    }, [id, player, dev_mode, readyUp])\r\n    useEffect(() => {\r\n        console.log(\"bonsai: add ping interval\")\r\n        let pingPlayerTime = setInterval(() => {\r\n            let current_time = 0;\r\n            if (player != null && player.getCurrentTime() != null) {\r\n                current_time = player.getCurrentTime();\r\n            }\r\n            if (dev_mode) {\r\n                return;\r\n            }\r\n            window.vuplex.postMessage({\r\n                type: \"infoCurrentTime\",\r\n                current_time: current_time\r\n            })\r\n        }, 100)\r\n        return () => {\r\n            console.log(\"bonsai: remove ping interval\")\r\n            clearInterval(pingPlayerTime)\r\n        }\r\n    }, [id, player, dev_mode])\r\n\r\n    let onStateChange = (event) => {\r\n        switch (event.data) {\r\n            case PlayerState.CUED:\r\n                handleCued();\r\n                break;\r\n            case PlayerState.UNSTARTED:\r\n                handleUnstarted();\r\n                break;\r\n            case PlayerState.PLAYING:\r\n                handlePlaying();\r\n                break;\r\n            case PlayerState.PAUSED:\r\n                handlePaused();\r\n                break;\r\n            case PlayerState.BUFFERING:\r\n                handleBuffering();\r\n                break;\r\n            case PlayerState.ENDED:\r\n                handleEnded();\r\n                break;\r\n            default:\r\n                console.log(\"bonsai error: did not handle state change \" + event.data)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {dev_mode ?\r\n                <div>\r\n                    <p onClick={() => {\r\n                        history.push(\"/home\")\r\n                    }}>home</p>\r\n                    {\" \"}\r\n                    <p onClick={() => {\r\n                        readyUp(40)\r\n                    }}>ready up</p>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <YouTube\r\n                opts={opts}\r\n                onReady={onReady}\r\n                onError={onError}\r\n                onStateChange={onStateChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video;","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring'\r\nimport {useDrag} from 'react-use-gesture'\r\n\r\nfunction Simple() {\r\n\r\n    const [{x, y}, set] = useSpring(() => ({x: 0, y: 0, config: {mass: 1, tension: 400, friction: 5}}))\r\n\r\n    const bind = useDrag(({down, movement: [mx, my]}) => {\r\n        set({x: down ? mx : 0, y: down ? my : 0})\r\n    })\r\n\r\n    return (\r\n        <div className={\"h-screen w-full flex flex-wrap content-center justify-center\"}>\r\n            <animated.div {...bind()} className={\"bg-red-400 h-10 w-10 rounded-lg\"} style={{x, y}}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Simple;","import React from 'react'\r\nimport ReactPlayer from \"react-player\"\r\n\r\nlet Twitch = () => {\r\n    let options = {\r\n        url: \"https://www.twitch.tv/hamletva\",\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    }\r\n\r\n    let onProgress = ({played, loaded, playedSeconds, loadedSeconds}) => {\r\n        console.log(played, loaded, playedSeconds, loadedSeconds)\r\n    }\r\n\r\n    return <ReactPlayer {...options} onProgress={onProgress} />\r\n}\r\n\r\nexport default Twitch;","import React, {useState} from 'react'\r\nimport \"./Menu.css\"\r\nimport {postJson} from \"../utilities\";\r\n\r\nfunction postMouseDown () {\r\n    postJson({Type: \"event\", Message: \"mouseDown\"})\r\n}\r\n\r\nfunction postMouseUp () {\r\n    postJson({Type: \"event\", Message: \"mouseUp\"})\r\n}\r\n\r\nfunction postHover () {\r\n    postJson({Type: \"event\", Message: \"hover\"})\r\n}\r\n\r\nfunction Button(props) {\r\n    return <div onMouseDown={postMouseDown} onMouseUp={postMouseUp} onMouseEnter={postHover}>{props.children}</div>\r\n}\r\n\r\nfunction ListItem(props) {\r\n    let {selected, handleClick} = props;\r\n    let className = selected ?\r\n        \"rounded bg-blue-700 text-white px-3 py-2 cursor-pointer\" :\r\n        \"rounded hover:bg-gray-800 active:bg-gray-900 hover:text-white px-3 py-2 cursor-pointer\"\r\n    return (\r\n        <Button>\r\n            <div className={className} onClick={handleClick}>\r\n                {props.children}\r\n            </div>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction SettingsList(props) {\r\n    return (\r\n        <div className={\"space-y-1 px-2 h-full overflow-auto\"}>\r\n            {props.children}\r\n        </div>)\r\n\r\n}\r\n\r\nfunction SettingsTitle(props) {\r\n    return <div className={\"text-white font-bold text-xl px-5 pt-5 pb-2\"}>{props.children}</div>\r\n}\r\n\r\nfunction Settings() {\r\n    let buttonClass = \"bg-gray-800 active:bg-gray-700 hover:bg-gray-600 rounded w-full p-4 cursor-pointer\"\r\n    return (\r\n        <MenuPage name={\"Settings\"}>\r\n            <div className={buttonClass}>thing</div>\r\n            <div className={buttonClass}>thing</div>\r\n        </MenuPage>\r\n    )\r\n}\r\n\r\nfunction JoinDeskButton (props) {\r\n    let {handleClick, char} = props\r\n    let buttonClass = \"bg-gray-800 active:bg-gray-700 hover:bg-gray-600 rounded-full p-4 cursor-pointer w-20 h-20 flex flex-wrap content-center\"\r\n\r\n    return (\r\n        <Button>\r\n            <div onClick={() => {\r\n                handleClick(char)\r\n            }} className={buttonClass}>\r\n            <span className={\"w-full text-center\"}>\r\n                {char}\r\n            </span>\r\n            </div>\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction JoinDesk() {\r\n    let [code, setCode] = useState(\"\")\r\n    //let [loading, setLoading] = useState(false);\r\n\r\n\r\n    function handleClick (char) {\r\n        if (code.length === 4) {\r\n            setCode(char)\r\n        } else {\r\n            setCode(code + char)\r\n        }\r\n    }\r\n\r\n    function handleBackspace () {\r\n        if (code.length > 0) {\r\n            setCode(code.slice(0, code.length - 1))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MenuPage name={\"Join Desk\"}>\r\n            <div className={\"flex flex-wrap w-full content-center\"}>\r\n                <div className={\"text-9xl w-1/2 flex flex-wrap content-center justify-center\"}>\r\n                    {code}\r\n                </div>\r\n                <div className={\"p-2 rounded space-y-4 text-2xl\"}>\r\n                    <div className={\"flex space-x-4\"}>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"A\"}/>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"B\"}/>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"C\"}/>\r\n                    </div>\r\n                    <div className={\"flex space-x-4\"}>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"D\"}/>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"E\"}/>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"F\"}/>\r\n                    </div>\r\n                    <div className={\"flex space-x-4\"}>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"G\"}/>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"H\"}/>\r\n                        <JoinDeskButton handleClick={handleClick} char={\"I\"}/>\r\n                    </div>\r\n                    <div className={\"flex flex-wrap w-full justify-around\"}>\r\n                        <JoinDeskButton handleClick={handleBackspace} char={\"<\"}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </MenuPage>\r\n    )\r\n}\r\n\r\nfunction Home() {\r\n    return <MenuPage name={\"Home\"}>\r\n    </MenuPage>\r\n}\r\n\r\nfunction Contacts() {\r\n    return <MenuPage name={\"Contacts\"}>\r\n    </MenuPage>\r\n}\r\n\r\nfunction MenuPage(props) {\r\n    let {name} = props;\r\n\r\n    return (\r\n        <div className={\"text-white p-4 h-full\"}>\r\n            {name ?\r\n                <div className={\"pb-4 text-xl\"}>\r\n                    {name}\r\n                </div>\r\n                : \"\"}\r\n            <div className={\"flex space-x-2\"}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst pages = [\r\n    {name: \"Home\", component: Home},\r\n    {name: \"Join Desk\", component: JoinDesk},\r\n    {name: \"Contacts\", component: Contacts},\r\n    {name: \"Settings\", component: Settings},\r\n]\r\n\r\nfunction Menu() {\r\n\r\n    let [active, setActive] = useState(0)\r\n\r\n    let SelectedPage = pages[active].component;\r\n\r\n    return (\r\n        <div className={\"flex text-lg text-gray-500 h-full\"}>\r\n            <div className={\"w-4/12 bg-black h-full overflow-hidden\"}>\r\n                <SettingsTitle>\r\n                    Menu\r\n                </SettingsTitle>\r\n                <SettingsList>\r\n                    {pages.map((info, i) => {\r\n                        return <ListItem key={info.name} handleClick={() => {\r\n                            setActive(i)\r\n                        }} selected={active === i}>{info.name}</ListItem>\r\n                    })}\r\n                </SettingsList>\r\n            </div>\r\n            <div className={\"w-full\"}>\r\n                <SelectedPage/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport {MemoryRouter as Router, Route, Switch, useHistory, Link} from \"react-router-dom\";\r\nimport YouTube from \"./pages/YouTube\";\r\nimport Spring from \"./pages/Spring\";\r\nimport Twitch from \"./pages/Twitch\";\r\nimport Menu from \"./pages/Menu\";\r\n\r\nfunction genNavListeners (history) {\r\n\r\n    function _navListeners (event) {\r\n\r\n        let json = JSON.parse(event.data);\r\n\r\n        if (json.type !== \"nav\") return;\r\n\r\n        switch (json.command) {\r\n            case \"push\":\r\n                console.log(\"command: nav \" + json.path)\r\n                history.push(json.path)\r\n                break;\r\n            default:\r\n                console.log(\"command: not handled (navListeners) \" + JSON.stringify(json))\r\n                break;\r\n        }\r\n    }\r\n\r\n    return _navListeners\r\n}\r\n\r\nfunction Boot () {\r\n\r\n    console.log(\"Boot\")\r\n\r\n    let history = useHistory();\r\n\r\n    let navListeners = genNavListeners(history);\r\n\r\n    if (window.vuplex != null) {\r\n\r\n        console.log(\"bonsai: vuplex is not null -> navListeners\")\r\n        window.vuplex.addEventListener('message', navListeners)\r\n\r\n    } else {\r\n        console.log(\"bonsai: vuplex is null\")\r\n        window.addEventListener('vuplexready', _ => {\r\n\r\n            console.log(\"bonsai: vuplexready -> navListeners\")\r\n            window.vuplex.addEventListener('message', navListeners)\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Boot\r\n            <ul>\r\n                <li>\r\n                    <Link to={\"/youtube_test/qEfPBt9dU60/19.02890180001912?x=480&y=360\"}>youtube_test video</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={\"/spring\"}>spring</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={\"/twitch\"}>twitch</Link>\r\n                </li>\r\n                <li onClick={() => {\r\n                    history.push(\"/menu\")\r\n                }}className={\"text-white\"}>menu</li>\r\n                <li>\r\n                    <Link to={\"/menu\"}>menu</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Home () {\r\n    return <div>home</div>\r\n}\r\n\r\nfunction App() {\r\n    console.log(\"App\")\r\n    return (\r\n        <Router>\r\n            <div className={\"bg-gray-900 h-screen text-green-400 select-none\"}>\r\n                <Switch>\r\n\r\n                    <Route path={\"/home\"} component={Home}/>\r\n\r\n                    <Route path={\"/spring\"} component={Spring}/>\r\n\r\n                    <Route path={\"/twitch\"} component={Twitch}/>\r\n\r\n                    <Route path={\"/menu\"} component={Menu}/>\r\n\r\n                    <Route path={\"/youtube/:id/:timeStamp\"} component={YouTube}/>\r\n\r\n                    <Route path={\"/youtube_test/:id/:timeStamp\"} component={YouTube}/>\r\n\r\n                    <Route path={\"/\"} component={Boot}/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","let postJson = (json) => {\r\n    console.log(\"bonsai post json: \" + JSON.stringify(json))\r\n    if (window.vuplex != null) {\r\n        window.vuplex.postMessage(json);\r\n    }\r\n}\r\n\r\nmodule.exports = {postJson};"],"sourceRoot":""}