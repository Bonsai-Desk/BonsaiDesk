{"version":3,"sources":["pages/YouTube.jsx","pages/Spring.jsx","pages/Twitch.jsx","static/door-open.svg","static/link.svg","static/thinking-face.svg","DataProvider.jsx","pages/Menu.jsx","App.jsx","index.jsx","utilities.js"],"names":["PlayerState","showState","state","name","Video","props","query","URLSearchParams","location","search","xRes","parseInt","get","yRes","opts","width","window","innerWidth","height","innerHeight","playerVars","autoplay","controls","disablekb","rel","history","useHistory","dev_mode","pathname","split","match","params","id","timeStamp","useState","player","setPlayer","init","setInit","ready","setReady","readying","setReadying","justBuffered","setJustBuffered","postStateChange","useCallback","message","console","log","vuplex","postMessage","type","current_time","getCurrentTime","readyUp","_timeStamp","Math","abs","getPlayerState","prepareToReadyUp","playVideo","seekTo","pauseVideo","unMute","_player","mute","useEffect","playerListeners","event","json","JSON","parse","data","command","addEventListener","removeEventListener","pingPlayerTime","setInterval","clearInterval","onClick","push","onReady","target","loadVideoById","parseFloat","onError","onStateChange","Simple","useSpring","x","y","config","mass","tension","friction","set","bind","useDrag","down","movement","mx","my","className","div","style","Twitch","options","url","onProgress","played","loaded","playedSeconds","loadedSeconds","StoreContext","React","createContext","useStore","useContext","store","ip_address","port","network_state","loading_room_code","_refresh_room_code_handler","player_info","_room_code","makeAutoObservable","this","axios","method","room_code","then","response","catch","err","code","refreshRoomCode","Object","seal","pushStoreList","action","kvList","forEach","kv","Key","Val","pushStore","obj","prop","pushStoreSingle","StoreProvider","observer","children","storeListeners","Type","Message","Data","_","useListeners","Provider","value","API_BASE","redButtonClass","postLeaveRoom","postJson","postKickAll","postMouseDown","postMouseUp","postHover","Button","onMouseDown","onMouseUp","onMouseEnter","ListItem","selected","handleClick","SettingsList","SettingsTitle","JoinDeskButton","char","ConnectedClient","info","Name","ConnectionId","InfoItem","title","slug","imgSrc","ThinkingFace","src","alt","MenuContent","ClientHomePage","LinkImg","HostHomePage","Fragment","DoorOpen","size","color","length","map","LoadingHomePage","pages","component","Inner","navHome","setCode","loading","setLoading","setMessage","stringify","slice","buttonClass","addFakeIpPort","rmFakeIpPort","setNetState","netState","addFakeClient","rmFakeClient","pop","entries","showInfo","join","toString","Menu","active","setActive","SelectedPage","autorun","header","tag","i","postListenersReady","Boot","navListeners","path","genNavListeners","to","Home","App","Spring","YouTube","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gOAIMA,GACU,EADVA,EAEK,EAFLA,EAGO,EAHPA,EAIM,EAJNA,EAKS,EALTA,EAMI,EAGNC,EAAY,SAACC,GACb,IAAIC,EACJ,OAAQD,GACJ,KAAM,EACFC,EAAO,YACP,MACJ,KAAK,EACDA,EAAO,QACP,MACJ,KAAK,EACDA,EAAO,UACP,MACJ,KAAK,EACDA,EAAO,SACP,MACJ,KAAK,EACDA,EAAO,YACP,MACJ,KAAK,EACDA,EAAO,OACP,MACJ,QACIA,EAAO,mBAEf,OAAOA,GAmRIC,EA/QH,SAACC,GACT,IAAIC,EAAQ,IAAIC,gBAAgBF,EAAMG,SAASC,QAE3CC,EAAOC,SAASL,EAAMM,IAAI,MAC1BC,EAAOF,SAASL,EAAMM,IAAI,MAE1BE,EAAO,CACPC,MAAOL,GAAQG,EAAOH,EAAOM,OAAOC,WACpCC,OAAQR,GAAQG,EAAOA,EAAOG,OAAOG,YACrCC,WAAY,CACRC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,IAAK,IAITC,EAAUC,cAEVC,EAAqD,iBAA1CtB,EAAMG,SAASoB,SAASC,MAAM,KAAK,GAnB/B,EAqBGxB,EAAMyB,MAAMC,OAA7BC,EArBc,EAqBdA,GAAIC,EArBU,EAqBVA,UArBU,EAuBOC,mBAAS,MAvBhB,mBAuBdC,EAvBc,KAuBNC,EAvBM,OAwBGF,oBAAS,GAxBZ,mBAwBdG,EAxBc,KAwBRC,EAxBQ,OA2BKJ,oBAAS,GA3Bd,mBA2BdK,EA3Bc,KA2BPC,EA3BO,OA4BWN,oBAAS,GA5BpB,mBA4BdO,EA5Bc,KA4BJC,EA5BI,OA6BmBR,oBAAS,GA7B5B,mBA6BdS,EA7Bc,KA6BAC,EA7BA,KA+BfC,EAAkBC,uBAAY,SAACC,GACf,UAAZA,GAAqBP,GAAS,GAClCQ,QAAQC,IAAI,QAAUF,GACjBpB,GACDX,OAAOkC,OAAOC,YAAY,CAACC,KAAM,cAAeL,QAASA,EAASM,aAAclB,EAAOmB,qBAE5F,CAACnB,EAAQR,IAER4B,EAAUT,uBAAY,SAACU,GACvB,GAAc,MAAVrB,EAAJ,CAKA,GAAII,GAASkB,KAAKC,IAAIvB,EAAOmB,iBAAmBE,GAAc,IAG1D,OAFAR,QAAQC,IAAI,4CACZJ,EAAgB,SAIpB,IAAI3C,EAAQiC,EAAOwB,iBAEdtB,GAGDW,QAAQC,IAAI,4BAA8BhD,EAAUC,GAAS,OAASsD,GACtEI,EAAiBzB,GACbjC,IAAUF,GACVmC,EAAO0B,YAEX1B,EAAO2B,OAAON,GAAY,GAC1BrB,EAAO4B,aACP5B,EAAO6B,UATPhB,QAAQC,IAAI,yDAbZD,QAAQC,IAAI,+DAyBjB,CAACZ,EAAMF,EAAQU,EAAiBN,IAE/BqB,EAAmB,SAACK,GACpBjB,QAAQC,IAAI,+BACZT,GAAS,GACTE,GAAY,GACZuB,EAAQC,QA8FZC,qBAAU,WACN,GAAc,MAAVhC,IAAkBR,EAAtB,CAIA,IAAIyC,EAAkB,SAACC,GACnB,IAAIC,EAAOC,KAAKC,MAAMH,EAAMI,MAC5B,GAAkB,UAAdH,EAAKlB,KAIT,OADAJ,QAAQC,IAAIoB,EAAMI,MACVH,EAAKI,SACT,IAAK,OACD1B,QAAQC,IAAI,iBACZd,EAAO0B,YACP,MACJ,IAAK,QACDb,QAAQC,IAAI,kBACZd,EAAO4B,aACP,MACJ,IAAK,UACDf,QAAQC,IAAI,oBACZM,EAAQe,EAAKrC,WACb,MACJ,QACIe,QAAQC,IAAI,gCAAkCoB,EAAMI,QAKhE,OADAzD,OAAOkC,OAAOyB,iBAAiB,UAAWP,GACnC,WACHpD,OAAOkC,OAAO0B,oBAAoB,UAAWR,OAElD,CAACpC,EAAIG,EAAQR,EAAU4B,IAC1BY,qBAAU,WACNnB,QAAQC,IAAI,6BACZ,IAAI4B,EAAiBC,aAAY,WAC7B,IAAIzB,EAAe,EACL,MAAVlB,GAA6C,MAA3BA,EAAOmB,mBACzBD,EAAelB,EAAOmB,kBAEtB3B,GAGJX,OAAOkC,OAAOC,YAAY,CACtBC,KAAM,kBACNC,aAAcA,MAEnB,KACH,OAAO,WACHL,QAAQC,IAAI,gCACZ8B,cAAcF,MAEnB,CAAC7C,EAAIG,EAAQR,IA4BhB,OACI,gCACKA,EACG,gCACI,mBAAGqD,QAAS,WACRvD,EAAQwD,KAAK,UADjB,kBAGC,IACD,mBAAGD,QAAS,WACRzB,EAAQ,KADZ,yBAIF,GAEN,cAAC,IAAD,CACIzC,KAAMA,EACNoE,QA5LE,SAACb,GAEX,IAAIJ,EAAUI,EAAMc,OACpB/C,EAAU6B,GACVL,EAAiBK,GACjBA,EAAQmB,cAAcpD,EAAIqD,WAAWpD,KAwL7BqD,QAtLE,SAACjB,GACXrB,QAAQC,IAAI,yBAA2BoB,IAsL/BkB,cA5CQ,SAAClB,GACjB,OAAQA,EAAMI,MACV,KAAKzE,EAxITgD,QAAQC,IAAI,WAAahD,EAAUkC,EAAOwB,mBA0IlC,MACJ,KAAK3D,EAvITgD,QAAQC,IACJ,WACAhD,EAAUkC,EAAOwB,kBAAoB,IACrCxB,EAAOmB,kBAsIH,MACJ,KAAKtD,EA7HLqC,EACII,EACAO,QAAQC,IAAI,mCAERN,EACAK,QAAQC,IAAI,gCAEZD,QAAQC,IAAI,mBAEhBJ,EAAgB,YAGpBV,EAAO4B,aAEPpB,GACAC,GAAgB,GAgHZ,MACJ,KAAK5C,EA5GLqC,EACIM,EACIF,IAAaF,GACbS,QAAQC,IAAI,sCACZT,GAAS,GACTE,GAAY,GACZG,EAAgB,WAEhBG,QAAQC,IAAI,kCACZJ,EAAgB,WAGhBJ,EACAO,QAAQC,IAAI,qCAEZD,QAAQC,IAAI,kBACZJ,EAAgB,YAIxBG,QAAQC,IAAI,yBACZd,EAAO2B,OAAO7B,GAAW,GACzBE,EAAO6B,SACP1B,GAAQ,GACRE,GAAS,GACTE,GAAY,GACZG,EAAgB,UAEhBF,GACAC,GAAgB,GAiFZ,MACJ,KAAK5C,EA7ELyC,EACAO,QAAQC,IAAI,uCAEZD,QAAQC,IAAI,qBAEhBL,GAAgB,GA0ER,MACJ,KAAK5C,EA3ITgD,QAAQC,IAAI,WAAahD,EAAUkC,EAAOwB,mBAC1Cd,EAAgB,SA4IR,MACJ,QACIG,QAAQC,IAAI,6CAA+CoB,EAAMI,c,iCCvQlEe,MAhBf,WAAmB,IAAD,EAEQC,qBAAU,iBAAO,CAACC,EAAG,EAAGC,EAAG,EAAGC,OAAQ,CAACC,KAAM,EAAGC,QAAS,IAAKC,SAAU,OAFhF,0BAENL,EAFM,EAENA,EAAGC,EAFG,EAEHA,EAAIK,EAFD,KAIRC,EAAOC,aAAQ,YAAiC,IAA/BC,EAA8B,EAA9BA,KAA8B,gBAAxBC,SAAwB,GAAbC,EAAa,KAATC,EAAS,KACjDN,EAAI,CAACN,EAAGS,EAAOE,EAAK,EAAGV,EAAGQ,EAAOG,EAAK,OAG1C,OACI,qBAAKC,UAAW,+DAAhB,SACI,cAAC,WAASC,IAAV,2BAAkBP,KAAlB,IAA0BM,UAAW,kCAAmCE,MAAO,CAACf,IAAGC,W,iBCGhFe,EAdF,WACT,IAAIC,EAAU,CACVC,IAAK,iCACL7F,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,aAOnB,OAAO,cAAC,IAAD,2BAAiBwF,GAAjB,IAA0BE,WAJhB,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAC9CjE,QAAQC,IAAI6D,EAAQC,EAAQC,EAAeC,Q,kCCXpC,MAA0B,sCCA1B,MAA0B,iCCA1B,MAA0B,0C,+BCK5BC,EAAeC,IAAMC,gBACrBC,EAAW,kBAAMC,qBAAWJ,IAgDnCK,EAAQ,I,WApCZ,aAAe,yBAPfC,WAAa,KAOC,KANdC,KAAO,KAMO,KALdC,cAAgB,KAKF,KAJdC,mBAAoB,EAIN,KAHdC,2BAA6B,KAGf,KAFdC,YAAc,GAEA,KAIdC,WAAa,KAHXC,YAAmBC,M,8DAqBF,IAAD,OAChBC,IAAM,CACJC,OAAQ,OACRtB,IAnCS,wBAmCI,iBAAaW,EAAMY,UAAnB,cACZC,MAAK,SAAAC,GACNrF,QAAQC,IAAI,WAAasE,EAAMY,cAC9BG,OAAM,SAAAC,GACPvF,QAAQC,IAAIsF,GACZ,EAAKJ,UAAY,U,gCAvBnB,OAAOH,KAAKF,Y,aAGAU,GACZR,KAAKF,WAAaU,EACdA,EACFR,KAAKJ,2BAA6B9C,YAC9BkD,KAAKS,gBACH,MAEN1D,cAAciD,KAAKJ,4BACnBI,KAAKJ,2BAA6B,U,MAmBxCc,OAAOC,KAAKpB,GACZ,IAAIqB,EAAgBC,aAAO,SAACC,GAC1BA,EAAOC,SAAQ,SAAAC,GACbzB,EAAMyB,EAAGC,KAAOD,EAAGE,UAGnBC,EAAYN,aAAO,SAAAO,GACrB,IAAK,IAAMC,KAAQD,EACjB7B,EAAM8B,GAAQD,EAAIC,MAGlBC,EAAkBT,aAAQ,SAAAO,GAC5B7B,EAAM6B,EAAIH,KAAOG,EAAIF,OAiDhB,IAAMK,EAAgBC,aAAS,YAAiB,IAAfC,EAAc,EAAdA,SAItC,OAlDF,WAAyB,IAAD,EACAvH,oBAAS,GADT,mBACjBG,EADiB,KACXC,EADW,KAGtB6B,qBAAU,WACR,IAAI9B,EAAJ,CAEAC,GAAQ,GAER,IAAIoH,EAAiB,SAAArF,GACnB,IAAIC,EAAOC,KAAKC,MAAMH,EAAMI,MAC5B,OAAQH,EAAKqF,MACX,IAAK,UACH,OAAQrF,EAAKsF,SACX,IAAK,YACHhB,EAActE,EAAKuF,MACnB,MACF,IAAK,kBACHP,EAAgBhF,EAAKuF,MACrB,MACF,QACE7G,QAAQC,IAAI,uBAAyBoB,EAAMI,MAG/C,MACF,QACEzB,QAAQC,IAAI,uBAAyBoB,EAAMI,MAC3CzB,QAAQC,IAAIqB,KAMG,MAAjBtD,OAAOkC,QACTF,QAAQC,IAAI,gDACZjC,OAAOkC,OAAOyB,iBAAiB,UAAW+E,KAE1C1G,QAAQC,IAAI,0BACZjC,OAAO2D,iBAAiB,eAAe,SAAAmF,GACrC9G,QAAQC,IAAI,yCACZjC,OAAOkC,OAAOyB,iBAAiB,UAAW+E,UAI7C,CAACrH,IAKJ0H,GAEO,cAAC7C,EAAa8C,SAAd,CACHC,MAAO,CACL1C,QACA4B,YACAP,iBAJC,SAKCa,O,QCjHNS,EAAW,wBAIXC,EAAiB,yHAMrB,SAASC,IACPC,mBAAS,CAACV,KAAM,UAAWC,QAAS,cAItC,SAASU,IACPD,mBAAS,CAACV,KAAM,UAAWC,QAAS,YAOtC,SAASW,IACPF,mBAAS,CAACV,KAAM,QAASC,QAAS,cAGpC,SAASY,IACPH,mBAAS,CAACV,KAAM,QAASC,QAAS,YAGpC,SAASa,IACPJ,mBAAS,CAACV,KAAM,QAASC,QAAS,UAGpC,SAASc,EAAOrK,GACd,OAAO,qBAAKsK,YAAaJ,EAAeK,UAAWJ,EACvCK,aAAcJ,EADnB,SAC+BpK,EAAMoJ,WAG9C,SAASqB,GAASzK,GAAQ,IACnB0K,EAAyB1K,EAAzB0K,SAAUC,EAAe3K,EAAf2K,YACXzE,EAAYwE,EACZ,0DACA,yFACJ,OACI,cAACL,EAAD,UACE,qBAAKnE,UAAWA,EAAWvB,QAASgG,EAApC,SACG3K,EAAMoJ,aAMjB,SAASwB,GAAa5K,GACpB,OACI,qBAAKkG,UAAW,iBAAhB,SACGlG,EAAMoJ,WAKf,SAASyB,GAAc7K,GACrB,OAAO,qBACHkG,UAAW,8CADR,SACwDlG,EAAMoJ,WAGvE,SAAS0B,GAAe9K,GAAQ,IACzB2K,EAAqB3K,EAArB2K,YAAaI,EAAQ/K,EAAR+K,KAElB,OACI,cAACV,EAAD,UACE,qBAAK1F,QAAS,WACZgG,EAAYI,IACX7E,UAxEY,2HAsEf,SAGI,sBAAMA,UAAW,qBAAjB,SACK6E,QAOjB,SAASC,GAAgBhL,GAAQ,IAC1BiL,EAAQjL,EAARiL,KACAC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,aACX,OAAO,cAACC,GAAD,CAAUC,MAAOH,EAAMI,KAAMH,EACnBI,OAAQC,EADlB,SACgC,cAACnB,EAAD,UACrC,qBAAK1F,QAAS,WArElB,IAA8BhD,IAsEHwJ,EArEzBnB,mBAAS,CAACV,KAAM,UAAWC,QAAS,mBAAoBC,KAAM7H,KAsEzDuE,UAAW4D,EAFd,sBAOJ,SAASsB,GAASpL,GAChB,OACI,sBAAKkG,UAAW,8BAAhB,UACE,sBAAKA,UAAW,cAAhB,UACE,qBAAKA,UAAW,0CAAhB,SACE,qBAAKA,UAAW,UAAWuF,IAAKzL,EAAMuL,OAAQG,IAAK,OAErD,gCACE,qBAAKxF,UAAW,UAAhB,SACGlG,EAAMqL,QAET,qBAAKnF,UAAW,gBAAhB,SACGlG,EAAMsL,aAIZtL,EAAMoJ,YAKf,SAASuC,GAAY3L,GAAQ,IACtBF,EAAQE,EAARF,KAEL,OACI,sBAAKoG,UAAW,6BAAhB,UACGpG,EACG,qBAAKoG,UAAW,eAAhB,SACGpG,IAED,GACN,qBAAKoG,UAAW,YAAhB,SACGlG,EAAMoJ,cAOjB,IAAIwC,GAAiB,WACnB,OACI,qBAAK1F,UAAW,OAAhB,SACE,cAACkF,GAAD,CAAUC,MAAO,YAAaC,KAAM,8BAC1BC,OAAQM,EADlB,SAEE,cAACxB,EAAD,UACE,qBAAK1F,QAASoF,EAAe7D,UAAW4D,EAAxC,yBAORgC,GAAe3C,aAAS,WAAO,IAAD,EAEPnC,IAApBE,EAF2B,EAE3BA,MAAO4B,EAFoB,EAEpBA,UAIZ,OACI,eAAC,IAAMiD,SAAP,WACE,cAACX,GAAD,CAAUC,MAAO,YAAaC,KAAM,oCAC1BC,OAAQS,EADlB,SAEE,qBAAK9F,UAAW,yCAAhB,SACGgB,EAAMY,UACH,cAACuC,EAAD,UACE,qBAAK1F,QAAS,WACZmE,EAAU,CAAChB,UAAW,QACrB5B,UAXD,kHASF,SAE4BgB,EAAMY,cAGlC,cAAC,eAAD,CAAcmE,KAAM,GAAIC,MAAO,gBAIxChF,EAAMM,YAAY2E,OAAS,EACxB,eAAC,IAAMJ,SAAP,WACE,cAACX,GAAD,CAAUC,MAAO,oBACPC,KAAM,gCAAiCC,OAAQM,EADzD,SAEE,cAACxB,EAAD,UACE,qBAAK1F,QAASsF,EAAa/D,UAAW4D,EAAtC,0BAKH5C,EAAMM,YAAY4E,KAAI,SAAAnB,GAAI,OAAI,cAACD,GAAD,CAAiBC,KAAMA,UAGxD,SAMRoB,GAAkB,WACpB,OAAO,qBAAKnG,UAAW,oCAAhB,SACL,cAAC,eAAD,CAAc+F,KAAM,IAAKC,MAAO,eAyHpC,IA4FMI,GAAQ,CACZ,CAACxM,KAAM,OAAQyM,UAlNFpD,aAAS,WAAO,IAIzBqD,EAEJ,OAJcxF,IAATE,MAISG,eACZ,IAAK,UACL,IAAK,cACL,IAAK,UACHmF,EAAQ,cAACV,GAAD,IACR,MACF,IAAK,kBACHU,EAAQ,cAAC,GAAD,IACR,MACF,QACEA,EAAQ,cAAC,GAAD,IAIZ,OACI,cAACb,GAAD,CAAa7L,KAAM,OAAnB,SACG0M,QA6LP,CAAC1M,KAAM,YAAayM,UAxLtB,SAAsBvM,GAAQ,IACvByM,EAAWzM,EAAXyM,QADsB,EAGL5K,mBAAS,IAHJ,mBAGtBsG,EAHsB,KAGhBuE,EAHgB,OAIC7K,oBAAS,GAJV,mBAItB8K,EAJsB,KAIbC,EAJa,OAKC/K,mBAAS,IALV,mBAKtBa,EALsB,KAKbmK,EALa,KA8B3B,SAASlC,EAAYI,GAEnB,OADA8B,EAAW,IACH1E,EAAKgE,QACX,KAAK,EACHO,EAAQ3B,GACR,MACF,QACE2B,EAAQvE,EAAO4C,IAWrB,OAzCAjH,qBAAU,WACR,IAAI6I,GAEgB,IAAhBxE,EAAKgE,OAAc,CACrB,IAAI5F,EAAMsD,EAAQ,iBAAa1B,GAC/BxF,QAAQC,IAAI2D,GACZqB,IAAM,CACJC,OAAQ,MACRtB,IAAKA,IACJwB,MAAK,SAAAC,GAvOd,IAAsB5D,IAwOD4D,EAAS5D,KAvO5B4F,mBAAS,CAACV,KAAM,UAAWC,QAAS,WAAYnF,KAAMF,KAAK4I,UAAU1I,KAwO/DqI,IACAC,EAAQ,IACRE,GAAW,MACV3E,OAAM,SAAAC,GACPvF,QAAQC,IAAIsF,GACZwE,EAAQ,IACRE,GAAW,GACXC,EAAW,wCAGd,CAACF,EAASxE,IAqBT,cAACwD,GAAD,CAAa7L,KAAM,YAAnB,SACE,sBAAKoG,UAAW,uCAAhB,UACE,sBAAKA,UAAW,SAAhB,UACE,qBAAKA,UAAW,UAAhB,SACGxD,IAEH,qBACIwD,UAAW,+DADf,SAEGiC,OAGL,sBAAKjC,UAAW,iCAAhB,UACE,sBAAKA,UAAW,iBAAhB,UACE,cAAC4E,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,MAChD,cAACD,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,MAChD,cAACD,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,SAElD,sBAAK7E,UAAW,iBAAhB,UACE,cAAC4E,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,MAChD,cAACD,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,MAChD,cAACD,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,SAElD,sBAAK7E,UAAW,iBAAhB,UACE,cAAC4E,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,MAChD,cAACD,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,MAChD,cAACD,GAAD,CAAgBH,YAAaA,EAAaI,KAAM,SAElD,qBAAK7E,UAAW,uCAAhB,SACE,cAAC4E,GAAD,CAAgBH,YAnC5B,WACMxC,EAAKgE,OAAS,GAChBO,EAAQvE,EAAK4E,MAAM,EAAG5E,EAAKgE,OAAS,KAiCkBpB,KAAM,kBA4GhE,CAACjL,KAAM,WAAYyM,UApGrB,WACE,OAAO,cAACZ,GAAD,CAAa7L,KAAM,eAoG1B,CAACA,KAAM,WAAYyM,UAhGFpD,aAAS,WAAO,IAC5BjC,EAASF,IAATE,MAED8F,EAAc,4GAEdC,EAAgBzE,aAAO,SAACtB,GAC1BA,EAAMC,WAAa,KACnBD,EAAME,KAAO,QAEX8F,EAAe1E,aAAO,SAAAtB,GACxBA,EAAMC,WAAa,KACnBD,EAAME,KAAO,QAGX+F,EAAc3E,aAAO,SAACtB,EAAOkG,GAC/BlG,EAAMG,cAAgB+F,KAGpBC,EAAgB7E,aAAO,SAAAtB,GACzBA,EAAMM,YAAY5C,KAAK,CAACsG,KAAM,MAAOC,aAAc,OAEjDmC,EAAe9E,aAAO,SAAAtB,GACxBA,EAAMM,YAAY+F,SAGpB,OACI,eAAC5B,GAAD,CAAa7L,KAAM,WAAnB,UACE,sBAAKoG,UAAW,iBAAhB,UACE,cAACmE,EAAD,UACE,qBAAK1F,QAAS,WACZwI,EAAYjG,EAAO,YAClBhB,UAAW8G,EAFd,uBAKF,cAAC3C,EAAD,UACE,qBAAK1F,QAAS,WACZwI,EAAYjG,EAAO,gBAClBhB,UAAW8G,EAFd,2BAKF,cAAC3C,EAAD,UACE,qBAAK1F,QAAS,WACZwI,EAAYjG,EAAO,YAClBhB,UAAW8G,EAFd,uBAKF,cAAC3C,EAAD,UACE,qBAAK1F,QAAS,WACZwI,EAAYjG,EAAO,oBAClBhB,UAAW8G,EAFd,kCAQJ,sBAAK9G,UAAW,iBAAhB,UACE,cAACmE,EAAD,UACE,qBAAKnE,UAAW8G,EAAarI,QAAS,WACpCsI,EAAc/F,IADhB,8BAKF,cAACmD,EAAD,UACE,qBAAKnE,UAAW8G,EAAarI,QAAS,WACpCuI,EAAahG,IADf,iCAMJ,sBAAKhB,UAAW,iBAAhB,UACE,cAACmE,EAAD,UACE,qBAAK1F,QAAS,WACZ0I,EAAcnG,IACbhB,UAAW8G,EAFd,6BAKF,cAAC3C,EAAD,UACE,qBAAK1F,QAAS,WACZ2I,EAAapG,IACZhB,UAAW8G,EAFd,gCAMJ,6BACG3E,OAAOmF,QAAQtG,GAAOkF,KAAI,SAAAnB,GACzB,OAAO,+BAAmBA,EAAK,GAAI,KAAMwC,GAASxC,KAAlCA,EAAK,iBAcjC,SAASwC,GAASxC,GAChB,OAAQA,EAAK,IACX,IAAK,cACH,MAOG,IAPmBA,EAAK,GAOPmB,KAAI,SAAAnB,GAC1B,MAAM,IAAN,OAAWA,EAAKC,KAAhB,aAAyBD,EAAKE,aAA9B,QACCuC,KAAK,KAAO,IARb,QACE,OAAOzC,EAAK,GAAKA,EAAK,GAAG0C,WAAa,IAU5C,IA2EeC,GA3EJ,WAAO,IAAD,EAEU5G,IAApBE,EAFU,EAEVA,MAAO4B,EAFG,EAEHA,UAFG,EAIWjH,mBAAS,GAJpB,mBAIVgM,EAJU,KAIFC,EAJE,KAMXC,EAAezB,GAAMuB,GAAQtB,UA6CjC,OAvCAzI,qBAAU,WACRkK,aAAQ,WAEN,GAAI9G,EAAMY,aAAeZ,EAAMC,aAAeD,EAAME,MAGlD,OAFAzE,QAAQC,IAAI,qBACZkG,EAAU,CAAChB,UAAW,OAKxB,IAAKZ,EAAMY,YAAcZ,EAAMI,mBAAqBJ,EAAMC,YACtDD,EAAME,KAAM,CACdzE,QAAQC,IAAI,mBACZkG,EAAU,CAACxB,mBAAmB,IAE9BM,IACI,CACEC,OAAQ,OACRtB,IAJIsD,8BAKJzF,KAAK,cAAD,OAAgB8C,EAAMC,WAAtB,iBAAyCD,EAAME,MACnD6G,OAAQ,CAAC,eAAgB,uCAE7BlG,MAAK,SAAAC,GACLc,EAAU,CAAChB,UAAWE,EAAS5D,KAAK8J,IAAK5G,mBAAmB,OAC3DW,OAAM,SAAAC,GACPvF,QAAQC,IAAIsF,GACZY,EAAU,CAACxB,mBAAmB,cAOtCxD,qBAAU,WACR,OAAO,WACLgF,EAAU,CAAChB,UAAW,UAEvB,CAACgB,IAGA,sBAAK5C,UAAW,oCAAhB,UACE,sBAAKA,UAAW,kDAAhB,UACE,qBAAKA,UAAW,wBAAhB,SACE,cAAC2E,GAAD,qBAIF,qBAAK3E,UAAW,SACd,cAAC0E,GAAD,UACG0B,GAAMF,KAAI,SAACnB,EAAMkD,GAChB,OAAO,cAAC1D,GAAD,CAA0BE,YAAa,WAC5CmD,EAAUK,IACTzD,SAAUmD,IAAWM,EAFjB,SAEqBlD,EAAKnL,MAFXmL,EAAKnL,cAMnC,qBAAKoG,UAAW,mDAAhB,SACE,cAAC6H,EAAD,CAActB,QA7DR,WACZqB,EAAU,YChbd,SAASM,KACPpE,mBAAS,CAACV,KAAM,QAASC,QAAS,mBA6BpC,SAAS8E,KAEP1L,QAAQC,IAAI,QAEZ,IAAIxB,EAAUC,cAEViN,EA/BN,SAAyBlN,GAsBvB,OApBA,SAAuB4C,GAErBrB,QAAQC,IAAIoB,EAAMI,MAElB,IAAIH,EAAOC,KAAKC,MAAMH,EAAMI,MAE5B,GAAkB,QAAdH,EAAKlB,KAET,OAAQkB,EAAKI,SACX,IAAK,OACH1B,QAAQC,IAAI,gBAAkBqB,EAAKsK,MACnCnN,EAAQwD,KAAKX,EAAKsK,MAClB,MACF,QACE5L,QAAQC,IACJ,uCAAyCsB,KAAK4I,UAAU7I,MAc/CuK,CAAgBpN,GAmBnC,OAjBqB,MAAjBT,OAAOkC,QAETF,QAAQC,IAAI,8CACZjC,OAAOkC,OAAOyB,iBAAiB,UAAWgK,GAC1CF,OAGAzL,QAAQC,IAAI,0BACZjC,OAAO2D,iBAAiB,eAAe,SAAAmF,GAErC9G,QAAQC,IAAI,uCACZjC,OAAOkC,OAAOyB,iBAAiB,UAAWgK,GAC1CF,SAMA,uCAEE,+BACE,6BACE,cAAC,IAAD,CACIK,GAAI,0DADR,kCAIF,6BACE,cAAC,IAAD,CAAMA,GAAI,UAAV,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAI,UAAV,sBAEF,oBAAI9J,QAAS,WACXvD,EAAQwD,KAAK,UACZsB,UAAW,aAFd,kBAIA,6BACE,cAAC,IAAD,CAAMuI,GAAI,QAAV,0BAOZ,SAASC,KACP,OAAO,uCA8BMC,OA3Bf,WAEE,OADAhM,QAAQC,IAAI,OAER,cAAC,IAAD,UACE,qBAAKsD,UAAW,sCAAhB,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOqI,KAAM,QAAShC,UAAWmC,KAEjC,cAAC,IAAD,CAAOH,KAAM,UAAWhC,UAAWqC,IAEnC,cAAC,IAAD,CAAOL,KAAM,UAAWhC,UAAWlG,IAEnC,cAAC,IAAD,CAAOkI,KAAM,QAAShC,UAAWqB,KAEjC,cAAC,IAAD,CAAOW,KAAM,0BAA2BhC,UAAWsC,IAEnD,cAAC,IAAD,CAAON,KAAM,+BAAgChC,UAAWsC,IAExD,cAAC,IAAD,CAAON,KAAM,IAAKhC,UAAW8B,aCjHzCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC9F,EAAD,UACI,cAAC,GAAD,QAGR+F,SAASC,eAAe,U,iBCN1BC,EAAOC,QAAU,CAACpF,SANH,SAAC/F,GACS,MAAjBtD,OAAOkC,QACPlC,OAAOkC,OAAOC,YAAYmB,M","file":"static/js/main.fd17885f.chunk.js","sourcesContent":["import YouTube from \"react-youtube\";\r\nimport React, {useState, useEffect, useCallback} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst PlayerState = {\r\n    UNSTARTED: -1,\r\n    ENDED: 0,\r\n    PLAYING: 1,\r\n    PAUSED: 2,\r\n    BUFFERING: 3,\r\n    CUED: 5,\r\n};\r\n\r\nlet showState = (state) => {\r\n    let name;\r\n    switch (state) {\r\n        case -1:\r\n            name = \"unstarted\"\r\n            break;\r\n        case 0:\r\n            name = \"ended\"\r\n            break;\r\n        case 1:\r\n            name = \"playing\"\r\n            break;\r\n        case 2:\r\n            name = \"paused\"\r\n            break;\r\n        case 3:\r\n            name = \"buffering\"\r\n            break;\r\n        case 5:\r\n            name = \"cued\"\r\n            break;\r\n        default:\r\n            name = \"BAD SWITCH STATE\"\r\n    }\r\n    return name\r\n\r\n}\r\n\r\nlet Video = (props) => {\r\n    let query = new URLSearchParams(props.location.search)\r\n\r\n    let xRes = parseInt(query.get(\"x\"));\r\n    let yRes = parseInt(query.get(\"y\"));\r\n\r\n    let opts = {\r\n        width: xRes && yRes ? xRes : window.innerWidth,\r\n        height: xRes && yRes ? yRes : window.innerHeight,\r\n        playerVars: {\r\n            autoplay: 0,\r\n            controls: 0,\r\n            disablekb: 1,\r\n            rel: 0\r\n        }\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    let dev_mode = props.location.pathname.split(\"/\")[1] === \"youtube_test\";\r\n\r\n    let {id, timeStamp} = props.match.params;\r\n\r\n    let [player, setPlayer] = useState(null);\r\n    let [init, setInit] = useState(false);\r\n\r\n    // this is the 'I'm ready at a timestamp' 'ready', not the 'player is ready' of 'onReady'\r\n    let [ready, setReady] = useState(false);\r\n    let [readying, setReadying] = useState(false);\r\n    let [justBuffered, setJustBuffered] = useState(false);\r\n\r\n    let postStateChange = useCallback((message) => {\r\n        if (message !== \"READY\") setReady(false);\r\n        console.log(\"POST \" + message)\r\n        if (!dev_mode) {\r\n            window.vuplex.postMessage({type: \"stateChange\", message: message, current_time: player.getCurrentTime()});\r\n        }\r\n    }, [player, dev_mode])\r\n\r\n    let readyUp = useCallback((_timeStamp) => {\r\n        if (player == null) {\r\n            console.log(\"bonsai: ignoring attempt to ready up while player is null\")\r\n            return;\r\n        }\r\n\r\n        if (ready && Math.abs(player.getCurrentTime() - _timeStamp) < 0.01) {\r\n            console.log(\"bonsai: ready-up called while ready\")\r\n            postStateChange(\"READY\")\r\n            return;\r\n        }\r\n\r\n        let state = player.getPlayerState();\r\n\r\n        if (!init) {\r\n            console.log(\"bonsai: ignoring attempt to ready-up before init\")\r\n        } else {\r\n            console.log(\"bonsai: readying up from \" + showState(state) + \" -> \" + _timeStamp)\r\n            prepareToReadyUp(player);\r\n            if (state === PlayerState.PAUSED) {\r\n                player.playVideo();\r\n            }\r\n            player.seekTo(_timeStamp, true)\r\n            player.pauseVideo()\r\n            player.unMute();\r\n        }\r\n\r\n    }, [init, player, postStateChange, ready])\r\n\r\n    let prepareToReadyUp = (_player) => {\r\n        console.log(\"bonsai: prepare to ready up\")\r\n        setReady(false)\r\n        setReadying(true)\r\n        _player.mute();\r\n    }\r\n\r\n    let onReady = (event) => {\r\n        // load the player to the url timestamp when ready\r\n        let _player = event.target;\r\n        setPlayer(_player);\r\n        prepareToReadyUp(_player)\r\n        _player.loadVideoById(id, parseFloat(timeStamp));\r\n    }\r\n    let onError = (event) => {\r\n        console.log(\"bonsai youtube error: \" + event)\r\n    }\r\n\r\n    function handleCued() {\r\n        console.log(\"bonsai: \" + showState(player.getPlayerState()));\r\n    }\r\n\r\n    function handleUnstarted() {\r\n        console.log(\r\n            \"bonsai: \" +\r\n            showState(player.getPlayerState()) + \" \" +\r\n            player.getCurrentTime()\r\n        )\r\n    }\r\n\r\n    function handleEnded() {\r\n        console.log(\"bonsai: \" + showState(player.getPlayerState()));\r\n        postStateChange(\"ENDED\")\r\n    }\r\n\r\n    function handlePlaying() {\r\n        if (init) {\r\n            if (readying) {\r\n                console.log(\"bonsai: while readying -> play\")\r\n            } else {\r\n                if (justBuffered) {\r\n                    console.log(\"bonsai: playing after buffer\")\r\n                } else {\r\n                    console.log(\"bonsai: playing\")\r\n                }\r\n                postStateChange(\"PLAYING\")\r\n            }\r\n        } else {\r\n            player.pauseVideo()\r\n        }\r\n        if (justBuffered) {\r\n            setJustBuffered(false);\r\n        }\r\n    }\r\n\r\n    function handlePaused() {\r\n        if (init) {\r\n            if (justBuffered) {\r\n                if (readying && !ready) {\r\n                    console.log(\"bonsai: ready (pause after buffer)\")\r\n                    setReady(true);\r\n                    setReadying(false);\r\n                    postStateChange(\"READY\")\r\n                } else {\r\n                    console.log(\"bonsai: paused after buffering\")\r\n                    postStateChange(\"PAUSED\")\r\n                }\r\n            } else {\r\n                if (readying) {\r\n                    console.log(\"bonsai: while readying -> paused\")\r\n                } else {\r\n                    console.log(\"bonsai: paused\");\r\n                    postStateChange(\"PAUSED\");\r\n                }\r\n            }\r\n        } else {\r\n            console.log(\"bonsai: init complete\")\r\n            player.seekTo(timeStamp, true)\r\n            player.unMute();\r\n            setInit(true)\r\n            setReady(true)\r\n            setReadying(false)\r\n            postStateChange(\"READY\")\r\n        }\r\n        if (justBuffered) {\r\n            setJustBuffered(false);\r\n        }\r\n    }\r\n\r\n    function handleBuffering() {\r\n        if (readying) {\r\n            console.log(\"bonsai: while readying -> buffering\")\r\n        } else {\r\n            console.log(\"bonsai: buffering\")\r\n        }\r\n        setJustBuffered(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (player == null || dev_mode) {\r\n            return;\r\n        }\r\n\r\n        let playerListeners = (event) => {\r\n            let json = JSON.parse(event.data)\r\n            if (json.type !== \"video\") {\r\n                return;\r\n            }\r\n            console.log(event.data)\r\n            switch (json.command) {\r\n                case \"play\":\r\n                    console.log(\"COMMAND: play\")\r\n                    player.playVideo()\r\n                    break;\r\n                case \"pause\":\r\n                    console.log(\"COMMAND: pause\")\r\n                    player.pauseVideo()\r\n                    break;\r\n                case \"readyUp\":\r\n                    console.log(\"COMMAND: readyUp\")\r\n                    readyUp(json.timeStamp)\r\n                    break;\r\n                default:\r\n                    console.log(\"command: not handled (video) \" + event.data)\r\n                    break;\r\n            }\r\n        }\r\n        window.vuplex.addEventListener('message', playerListeners)\r\n        return () => {\r\n            window.vuplex.removeEventListener('message', playerListeners)\r\n        }\r\n    }, [id, player, dev_mode, readyUp])\r\n    useEffect(() => {\r\n        console.log(\"bonsai: add ping interval\")\r\n        let pingPlayerTime = setInterval(() => {\r\n            let current_time = 0;\r\n            if (player != null && player.getCurrentTime() != null) {\r\n                current_time = player.getCurrentTime();\r\n            }\r\n            if (dev_mode) {\r\n                return;\r\n            }\r\n            window.vuplex.postMessage({\r\n                type: \"infoCurrentTime\",\r\n                current_time: current_time\r\n            })\r\n        }, 100)\r\n        return () => {\r\n            console.log(\"bonsai: remove ping interval\")\r\n            clearInterval(pingPlayerTime)\r\n        }\r\n    }, [id, player, dev_mode])\r\n\r\n    let onStateChange = (event) => {\r\n        switch (event.data) {\r\n            case PlayerState.CUED:\r\n                handleCued();\r\n                break;\r\n            case PlayerState.UNSTARTED:\r\n                handleUnstarted();\r\n                break;\r\n            case PlayerState.PLAYING:\r\n                handlePlaying();\r\n                break;\r\n            case PlayerState.PAUSED:\r\n                handlePaused();\r\n                break;\r\n            case PlayerState.BUFFERING:\r\n                handleBuffering();\r\n                break;\r\n            case PlayerState.ENDED:\r\n                handleEnded();\r\n                break;\r\n            default:\r\n                console.log(\"bonsai error: did not handle state change \" + event.data)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {dev_mode ?\r\n                <div>\r\n                    <p onClick={() => {\r\n                        history.push(\"/home\")\r\n                    }}>home</p>\r\n                    {\" \"}\r\n                    <p onClick={() => {\r\n                        readyUp(40)\r\n                    }}>ready up</p>\r\n                </div>\r\n                : \"\"\r\n            }\r\n            <YouTube\r\n                opts={opts}\r\n                onReady={onReady}\r\n                onError={onError}\r\n                onStateChange={onStateChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video;","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring'\r\nimport {useDrag} from 'react-use-gesture'\r\n\r\nfunction Simple() {\r\n\r\n    const [{x, y}, set] = useSpring(() => ({x: 0, y: 0, config: {mass: 1, tension: 400, friction: 5}}))\r\n\r\n    const bind = useDrag(({down, movement: [mx, my]}) => {\r\n        set({x: down ? mx : 0, y: down ? my : 0})\r\n    })\r\n\r\n    return (\r\n        <div className={\"h-screen w-full flex flex-wrap content-center justify-center\"}>\r\n            <animated.div {...bind()} className={\"bg-red-400 h-10 w-10 rounded-lg\"} style={{x, y}}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Simple;","import React from 'react'\r\nimport ReactPlayer from \"react-player\"\r\n\r\nlet Twitch = () => {\r\n    let options = {\r\n        url: \"https://www.twitch.tv/hamletva\",\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    }\r\n\r\n    let onProgress = ({played, loaded, playedSeconds, loadedSeconds}) => {\r\n        console.log(played, loaded, playedSeconds, loadedSeconds)\r\n    }\r\n\r\n    return <ReactPlayer {...options} onProgress={onProgress} />\r\n}\r\n\r\nexport default Twitch;","export default __webpack_public_path__ + \"static/media/door-open.d2c81c6b.svg\";","export default __webpack_public_path__ + \"static/media/link.e557aaf1.svg\";","export default __webpack_public_path__ + \"static/media/thinking-face.179ede86.svg\";","import React, {useContext, useEffect, useState} from 'react';\r\nimport {action, makeAutoObservable} from 'mobx';\r\nimport {observer} from 'mobx-react-lite';\r\nimport axios from 'axios';\r\n\r\nexport const StoreContext = React.createContext();\r\nexport const useStore = () => useContext(StoreContext);\r\n\r\nlet API_BASE = 'https://api.desk.link';\r\n\r\nclass Store {\r\n  ip_address = null;\r\n  port = null;\r\n  network_state = null;\r\n  loading_room_code = false;\r\n  _refresh_room_code_handler = null;\r\n  player_info = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  _room_code = null;\r\n\r\n  get room_code() {\r\n    return this._room_code;\r\n  }\r\n\r\n  set room_code(code) {\r\n    this._room_code = code;\r\n    if (code) {\r\n      this._refresh_room_code_handler = setInterval(\r\n          this.refreshRoomCode\r\n          , 1000);\r\n    } else {\r\n      clearInterval(this._refresh_room_code_handler);\r\n      this._refresh_room_code_handler = null;\r\n    }\r\n  }\r\n\r\n  refreshRoomCode() {\r\n    axios({\r\n      method: 'post',\r\n      url: API_BASE + `/rooms/${store.room_code}/refresh`,\r\n    }).then(response => {\r\n      console.log('refresh ' + store.room_code);\r\n    }).catch(err => {\r\n      console.log(err);\r\n      this.room_code = null;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nconst store = new Store();\r\nObject.seal(store);\r\nlet pushStoreList = action((kvList) => {\r\n  kvList.forEach(kv => {\r\n    store[kv.Key] = kv.Val;\r\n  });\r\n});\r\nlet pushStore = action(obj => {\r\n  for (const prop in obj) {\r\n    store[prop] = obj[prop];\r\n  }\r\n});\r\nlet pushStoreSingle = action (obj => {\r\n  store[obj.Key] = obj.Val;\r\n})\r\n\r\nfunction useListeners() {\r\n  let [init, setInit] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (init) return;\r\n\r\n    setInit(true);\r\n\r\n    let storeListeners = event => {\r\n      let json = JSON.parse(event.data);\r\n      switch (json.Type) {\r\n        case 'command':\r\n          switch (json.Message) {\r\n            case 'pushStore':\r\n              pushStoreList(json.Data);\r\n              break;\r\n            case 'pushStoreSingle':\r\n              pushStoreSingle(json.Data);\r\n              break;\r\n            default:\r\n              console.log('message not handled ' + event.data);\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          console.log('command not handled ' + event.data);\r\n          console.log(json);\r\n          break;\r\n      }\r\n\r\n    };\r\n\r\n    if (window.vuplex != null) {\r\n      console.log('bonsai: vuplex is not null -> storeListeners');\r\n      window.vuplex.addEventListener('message', storeListeners);\r\n    } else {\r\n      console.log('bonsai: vuplex is null');\r\n      window.addEventListener('vuplexready', _ => {\r\n        console.log('bonsai: vuplexready -> storeListeners');\r\n        window.vuplex.addEventListener('message', storeListeners);\r\n      });\r\n    }\r\n\r\n  }, [init]);\r\n}\r\n\r\nexport const StoreProvider = observer(({children}) => {\r\n\r\n  useListeners();\r\n\r\n  return <StoreContext.Provider\r\n      value={{\r\n        store,\r\n        pushStore,\r\n        pushStoreList,\r\n      }}>{children}</StoreContext.Provider>;\r\n});","import React, {useEffect, useState} from 'react';\r\nimport './Menu.css';\r\nimport {postJson} from '../utilities';\r\nimport axios from 'axios';\r\nimport DoorOpen from '../static/door-open.svg';\r\nimport LinkImg from '../static/link.svg';\r\nimport ThinkingFace from '../static/thinking-face.svg';\r\nimport {useStore} from '../DataProvider';\r\nimport {BounceLoader} from 'react-spinners';\r\nimport {observer} from 'mobx-react-lite';\r\nimport {action, autorun} from 'mobx';\r\n\r\nlet API_BASE = 'https://api.desk.link';\r\n\r\nlet roundButtonClass = 'bg-gray-800 active:bg-gray-700 hover:bg-gray-600 rounded-full p-4 cursor-pointer w-20 h-20 flex flex-wrap content-center';\r\n\r\nlet redButtonClass = 'py-4 px-8 font-bold bg-red-800 active:bg-red-700 hover:bg-red-600 rounded cursor-pointer flex flex-wrap content-center';\r\n\r\nfunction postJoinRoom(data) {\r\n  postJson({Type: 'command', Message: 'joinRoom', data: JSON.stringify(data)});\r\n}\r\n\r\nfunction postLeaveRoom() {\r\n  postJson({Type: 'command', Message: 'leaveRoom'});\r\n\r\n}\r\n\r\nfunction postKickAll() {\r\n  postJson({Type: 'command', Message: 'kickAll'});\r\n}\r\n\r\nfunction postKickConnectionId(id) {\r\n  postJson({Type: 'command', Message: 'kickConnectionId', Data: id});\r\n}\r\n\r\nfunction postMouseDown() {\r\n  postJson({Type: 'event', Message: 'mouseDown'});\r\n}\r\n\r\nfunction postMouseUp() {\r\n  postJson({Type: 'event', Message: 'mouseUp'});\r\n}\r\n\r\nfunction postHover() {\r\n  postJson({Type: 'event', Message: 'hover'});\r\n}\r\n\r\nfunction Button(props) {\r\n  return <div onMouseDown={postMouseDown} onMouseUp={postMouseUp}\r\n              onMouseEnter={postHover}>{props.children}</div>;\r\n}\r\n\r\nfunction ListItem(props) {\r\n  let {selected, handleClick} = props;\r\n  let className = selected ?\r\n      'rounded bg-blue-700 text-white px-3 py-2 cursor-pointer' :\r\n      'rounded hover:bg-gray-800 active:bg-gray-900 hover:text-white px-3 py-2 cursor-pointer';\r\n  return (\r\n      <Button>\r\n        <div className={className} onClick={handleClick}>\r\n          {props.children}\r\n        </div>\r\n      </Button>\r\n  );\r\n}\r\n\r\nfunction SettingsList(props) {\r\n  return (\r\n      <div className={'space-y-1 px-2'}>\r\n        {props.children}\r\n      </div>);\r\n\r\n}\r\n\r\nfunction SettingsTitle(props) {\r\n  return <div\r\n      className={'text-white font-bold text-xl px-5 pt-5 pb-2'}>{props.children}</div>;\r\n}\r\n\r\nfunction JoinDeskButton(props) {\r\n  let {handleClick, char} = props;\r\n\r\n  return (\r\n      <Button>\r\n        <div onClick={() => {\r\n          handleClick(char);\r\n        }} className={roundButtonClass}>\r\n            <span className={'w-full text-center'}>\r\n                {char}\r\n            </span>\r\n        </div>\r\n      </Button>\r\n  );\r\n}\r\n\r\nfunction ConnectedClient(props) {\r\n  let {info} = props;\r\n  let {Name, ConnectionId} = info;\r\n  return <InfoItem title={Name} slug={ConnectionId}\r\n                   imgSrc={ThinkingFace}><Button>\r\n    <div onClick={() => {\r\n      postKickConnectionId(ConnectionId);\r\n    }} className={redButtonClass}>kick\r\n    </div>\r\n  </Button></InfoItem>;\r\n}\r\n\r\nfunction InfoItem(props) {\r\n  return (\r\n      <div className={'flex w-full justify-between'}>\r\n        <div className={'flex w-auto'}>\r\n          <div className={'flex flex-wrap content-center  p-2 mr-2'}>\r\n            <img className={'h-9 w-9'} src={props.imgSrc} alt={''}/>\r\n          </div>\r\n          <div>\r\n            <div className={'text-xl'}>\r\n              {props.title}\r\n            </div>\r\n            <div className={'text-gray-400'}>\r\n              {props.slug}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {props.children}\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction MenuContent(props) {\r\n  let {name} = props;\r\n\r\n  return (\r\n      <div className={'text-white p-4 h-full pr-8'}>\r\n        {name ?\r\n            <div className={'pb-8 text-xl'}>\r\n              {name}\r\n            </div>\r\n            : ''}\r\n        <div className={'space-y-8'}>\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n  );\r\n\r\n}\r\n\r\nlet ClientHomePage = () => {\r\n  return (\r\n      <div className={'flex'}>\r\n        <InfoItem title={'Connected'} slug={'You are connected to a host'}\r\n                  imgSrc={LinkImg}>\r\n          <Button>\r\n            <div onClick={postLeaveRoom} className={redButtonClass}>exit</div>\r\n          </Button>\r\n        </InfoItem>\r\n      </div>\r\n  );\r\n};\r\n\r\nlet HostHomePage = observer(() => {\r\n\r\n  let {store, pushStore} = useStore();\r\n\r\n  let buttonClass = 'px-2 py-1 bg-gray-800 active:bg-gray-700 hover:bg-gray-600 rounded cursor-pointer flex flex-wrap content-center';\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <InfoItem title={'Desk Code'} slug={'People who have this can join you'}\r\n                  imgSrc={DoorOpen}>\r\n          <div className={'text-4xl flex flex-wrap content-center'}>\r\n            {store.room_code ?\r\n                <Button>\r\n                  <div onClick={() => {\r\n                    pushStore({room_code: null});\r\n                  }} className={buttonClass}>{store.room_code}</div>\r\n                </Button>\r\n\r\n                : <BounceLoader size={40} color={'#737373'}/>\r\n            }\r\n          </div>\r\n        </InfoItem>\r\n        {store.player_info.length > 1 ?\r\n            <React.Fragment>\r\n              <InfoItem title={'Clients connected'}\r\n                        slug={'There are people in your room'} imgSrc={LinkImg}>\r\n                <Button>\r\n                  <div onClick={postKickAll} className={redButtonClass}>\r\n                    kick all\r\n                  </div>\r\n                </Button>\r\n              </InfoItem>\r\n              {store.player_info.map(info => <ConnectedClient info={info}/>)}\r\n            </React.Fragment>\r\n            :\r\n            ''}\r\n      </React.Fragment>\r\n  );\r\n\r\n});\r\n\r\nlet LoadingHomePage = () => {\r\n  return <div className={'flex justify-center w-full h-full'}>\r\n    <BounceLoader size={200} color={'#737373'}/>\r\n  </div>;\r\n};\r\n\r\nlet HomePage = observer(() => {\r\n\r\n  let {store} = useStore();\r\n\r\n  let Inner;\r\n\r\n  switch (store.network_state) {\r\n    case 'Neutral':\r\n    case 'HostWaiting':\r\n    case 'Hosting':\r\n      Inner = <HostHomePage/>;\r\n      break;\r\n    case 'ClientConnected':\r\n      Inner = <ClientHomePage/>;\r\n      break;\r\n    default:\r\n      Inner = <LoadingHomePage/>;\r\n      break;\r\n  }\r\n\r\n  return (\r\n      <MenuContent name={'Home'}>\r\n        {Inner}\r\n      </MenuContent>\r\n  );\r\n});\r\n\r\nfunction JoinDeskPage(props) {\r\n  let {navHome} = props;\r\n\r\n  let [code, setCode] = useState('');\r\n  let [loading, setLoading] = useState(false);\r\n  let [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n\r\n    if (code.length === 4) {\r\n      let url = API_BASE + `/rooms/${code}`;\r\n      console.log(url);\r\n      axios({\r\n        method: 'get',\r\n        url: url,\r\n      }).then(response => {\r\n        postJoinRoom(response.data);\r\n        navHome();\r\n        setCode('');\r\n        setLoading(false);\r\n      }).catch(err => {\r\n        console.log(err);\r\n        setCode('');\r\n        setLoading(false);\r\n        setMessage('Could not find room, try again');\r\n      });\r\n    }\r\n  }, [loading, code]);\r\n\r\n  function handleClick(char) {\r\n    setMessage('');\r\n    switch (code.length) {\r\n      case 4:\r\n        setCode(char);\r\n        break;\r\n      default:\r\n        setCode(code + char);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function handleBackspace() {\r\n    if (code.length > 0) {\r\n      setCode(code.slice(0, code.length - 1));\r\n    }\r\n  }\r\n\r\n  return (\r\n      <MenuContent name={'Join Desk'}>\r\n        <div className={'flex flex-wrap w-full content-center'}>\r\n          <div className={' w-1/2'}>\r\n            <div className={'text-xl'}>\r\n              {message}\r\n            </div>\r\n            <div\r\n                className={'text-9xl h-full flex flex-wrap content-center justify-center'}>\r\n              {code}\r\n            </div>\r\n          </div>\r\n          <div className={'p-2 rounded space-y-4 text-2xl'}>\r\n            <div className={'flex space-x-4'}>\r\n              <JoinDeskButton handleClick={handleClick} char={'L'}/>\r\n              <JoinDeskButton handleClick={handleClick} char={'R'}/>\r\n              <JoinDeskButton handleClick={handleClick} char={'C'}/>\r\n            </div>\r\n            <div className={'flex space-x-4'}>\r\n              <JoinDeskButton handleClick={handleClick} char={'D'}/>\r\n              <JoinDeskButton handleClick={handleClick} char={'E'}/>\r\n              <JoinDeskButton handleClick={handleClick} char={'F'}/>\r\n            </div>\r\n            <div className={'flex space-x-4'}>\r\n              <JoinDeskButton handleClick={handleClick} char={'G'}/>\r\n              <JoinDeskButton handleClick={handleClick} char={'H'}/>\r\n              <JoinDeskButton handleClick={handleClick} char={'I'}/>\r\n            </div>\r\n            <div className={'flex flex-wrap w-full justify-around'}>\r\n              <JoinDeskButton handleClick={handleBackspace} char={'<'}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MenuContent>\r\n  );\r\n}\r\n\r\nfunction ContactsPage() {\r\n  return <MenuContent name={'Contacts'}>\r\n  </MenuContent>;\r\n}\r\n\r\nlet SettingsPage = observer(() => {\r\n  let {store} = useStore();\r\n\r\n  let buttonClass = 'bg-gray-800 active:bg-gray-700 hover:bg-gray-600 rounded p-4 cursor-pointer flex flex-wrap content-center';\r\n\r\n  let addFakeIpPort = action((store) => {\r\n    store.ip_address = 1234;\r\n    store.port = 4321;\r\n  });\r\n  let rmFakeIpPort = action(store => {\r\n    store.ip_address = null;\r\n    store.port = null;\r\n  });\r\n\r\n  let setNetState = action((store, netState) => {\r\n    store.network_state = netState;\r\n  });\r\n\r\n  let addFakeClient = action(store => {\r\n    store.player_info.push({Name: 'cam', ConnectionId: 0});\r\n  });\r\n  let rmFakeClient = action(store => {\r\n    store.player_info.pop();\r\n  });\r\n\r\n  return (\r\n      <MenuContent name={'Settings'}>\r\n        <div className={'flex space-x-2'}>\r\n          <Button>\r\n            <div onClick={() => {\r\n              setNetState(store, 'Neutral');\r\n            }} className={buttonClass}>Neutral\r\n            </div>\r\n          </Button>\r\n          <Button>\r\n            <div onClick={() => {\r\n              setNetState(store, 'HostWaiting');\r\n            }} className={buttonClass}>HostWaiting\r\n            </div>\r\n          </Button>\r\n          <Button>\r\n            <div onClick={() => {\r\n              setNetState(store, 'Hosting');\r\n            }} className={buttonClass}>Hosting\r\n            </div>\r\n          </Button>\r\n          <Button>\r\n            <div onClick={() => {\r\n              setNetState(store, 'ClientConnected');\r\n            }} className={buttonClass}>ClientConnected\r\n            </div>\r\n          </Button>\r\n\r\n\r\n        </div>\r\n        <div className={'flex space-x-2'}>\r\n          <Button>\r\n            <div className={buttonClass} onClick={() => {\r\n              addFakeIpPort(store);\r\n            }}>+ fake ip/port\r\n            </div>\r\n          </Button>\r\n          <Button>\r\n            <div className={buttonClass} onClick={() => {\r\n              rmFakeIpPort(store);\r\n            }}>- fake ip/port\r\n            </div>\r\n          </Button>\r\n        </div>\r\n        <div className={'flex space-x-2'}>\r\n          <Button>\r\n            <div onClick={() => {\r\n              addFakeClient(store);\r\n            }} className={buttonClass}>+ fake client\r\n            </div>\r\n          </Button>\r\n          <Button>\r\n            <div onClick={() => {\r\n              rmFakeClient(store);\r\n            }} className={buttonClass}>- fake client\r\n            </div>\r\n          </Button>\r\n        </div>\r\n        <ul>\r\n          {Object.entries(store).map(info => {\r\n            return <li key={info[0]}>{info[0]}{': '}{showInfo(info)}</li>;\r\n          })}\r\n        </ul>\r\n      </MenuContent>\r\n  );\r\n});\r\n\r\nconst pages = [\r\n  {name: 'Home', component: HomePage},\r\n  {name: 'Join Desk', component: JoinDeskPage},\r\n  {name: 'Contacts', component: ContactsPage},\r\n  {name: 'Settings', component: SettingsPage},\r\n];\r\n\r\nfunction showInfo(info) {\r\n  switch (info[0]) {\r\n    case 'player_info':\r\n      return showPlayerInfo(info[1]);\r\n    default:\r\n      return info[1] ? info[1].toString() : '';\r\n  }\r\n}\r\n\r\nfunction showPlayerInfo(playerInfo) {\r\n  return '[' + playerInfo.map(info => {\r\n    return `(${info.Name}, ${info.ConnectionId})`;\r\n  }).join(' ') + ']';\r\n}\r\n\r\nlet Menu = () => {\r\n\r\n  let {store, pushStore} = useStore();\r\n\r\n  let [active, setActive] = useState(0);\r\n\r\n  let SelectedPage = pages[active].component;\r\n\r\n  let navHome = () => {\r\n    setActive(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    autorun(() => {\r\n      // remove room code if\r\n      if (store.room_code && (!store.ip_address || !store.port)) {\r\n        console.log('rm room code');\r\n        pushStore({room_code: null});\r\n        return;\r\n      }\r\n\r\n      // send ip/port out for a room code\r\n      if (!store.room_code && !store.loading_room_code && store.ip_address &&\r\n          store.port) {\r\n        console.log('fetch room code');\r\n        pushStore({loading_room_code: true});\r\n        let url = API_BASE + '/rooms';\r\n        axios(\r\n            {\r\n              method: 'post',\r\n              url: url,\r\n              data: `ip_address=${store.ip_address}&port=${store.port}`,\r\n              header: {'content-type': 'application/x-www-form-urlencoded'},\r\n            },\r\n        ).then(response => {\r\n          pushStore({room_code: response.data.tag, loading_room_code: false});\r\n        }).catch(err => {\r\n          console.log(err);\r\n          pushStore({loading_room_code: false});\r\n        });\r\n      }\r\n    });\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      pushStore({room_code: null});\r\n    };\r\n  }, [pushStore]);\r\n\r\n  return (\r\n      <div className={'flex text-lg text-gray-500 h-full'}>\r\n        <div className={'w-4/12 bg-black overflow-auto scrollhost static'}>\r\n          <div className={\"w-4/12 bg-black fixed\"}>\r\n            <SettingsTitle>\r\n              Menu\r\n            </SettingsTitle>\r\n          </div>\r\n          <div className={\"h-16\"} />\r\n            <SettingsList>\r\n              {pages.map((info, i) => {\r\n                return <ListItem key={info.name} handleClick={() => {\r\n                  setActive(i);\r\n                }} selected={active === i}>{info.name}</ListItem>;\r\n              })}\r\n            </SettingsList>\r\n        </div>\r\n        <div className={'bg-gray-900 z-10 w-full overflow-auto scrollhost'}>\r\n          <SelectedPage navHome={navHome}/>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport {\r\n  Link,\r\n  MemoryRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport YouTube from './pages/YouTube';\r\nimport Spring from './pages/Spring';\r\nimport Twitch from './pages/Twitch';\r\nimport Menu from './pages/Menu';\r\nimport {postJson} from './utilities';\r\n\r\nfunction postListenersReady() {\r\n  postJson({Type: 'event', Message: 'listenersReady'});\r\n\r\n}\r\n\r\nfunction genNavListeners(history) {\r\n\r\n  function _navListeners(event) {\r\n\r\n    console.log(event.data)\r\n\r\n    let json = JSON.parse(event.data);\r\n\r\n    if (json.type !== 'nav') return;\r\n\r\n    switch (json.command) {\r\n      case 'push':\r\n        console.log('command: nav ' + json.path);\r\n        history.push(json.path);\r\n        break;\r\n      default:\r\n        console.log(\r\n            'command: not handled (navListeners) ' + JSON.stringify(json));\r\n        break;\r\n    }\r\n  }\r\n\r\n  return _navListeners;\r\n}\r\n\r\nfunction Boot() {\r\n\r\n  console.log('Boot');\r\n\r\n  let history = useHistory();\r\n\r\n  let navListeners = genNavListeners(history);\r\n\r\n  if (window.vuplex != null) {\r\n\r\n    console.log('bonsai: vuplex is not null -> navListeners');\r\n    window.vuplex.addEventListener('message', navListeners);\r\n    postListenersReady();\r\n\r\n  } else {\r\n    console.log('bonsai: vuplex is null');\r\n    window.addEventListener('vuplexready', _ => {\r\n\r\n      console.log('bonsai: vuplexready -> navListeners');\r\n      window.vuplex.addEventListener('message', navListeners);\r\n      postListenersReady();\r\n\r\n    });\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        Boot\r\n        <ul>\r\n          <li>\r\n            <Link\r\n                to={'/youtube_test/qEfPBt9dU60/19.02890180001912?x=480&y=360'}>youtube_test\r\n              video</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={'/spring'}>spring</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={'/twitch'}>twitch</Link>\r\n          </li>\r\n          <li onClick={() => {\r\n            history.push('/menu');\r\n          }} className={'text-white'}>menu\r\n          </li>\r\n          <li>\r\n            <Link to={'/menu'}>menu</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return <div>home</div>;\r\n}\r\n\r\nfunction App() {\r\n  console.log('App');\r\n  return (\r\n      <Router>\r\n        <div className={'h-screen text-green-400 select-none'}>\r\n          <Switch>\r\n\r\n            <Route path={'/home'} component={Home}/>\r\n\r\n            <Route path={'/spring'} component={Spring}/>\r\n\r\n            <Route path={'/twitch'} component={Twitch}/>\r\n\r\n            <Route path={'/menu'} component={Menu}/>\r\n\r\n            <Route path={'/youtube/:id/:timeStamp'} component={YouTube}/>\r\n\r\n            <Route path={'/youtube_test/:id/:timeStamp'} component={YouTube}/>\r\n\r\n            <Route path={'/'} component={Boot}/>\r\n\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {StoreProvider} from \"./DataProvider\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <StoreProvider>\r\n          <App />\r\n      </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","let postJson = (json) => {\r\n    if (window.vuplex != null) {\r\n        window.vuplex.postMessage(json);\r\n    }\r\n}\r\n\r\nmodule.exports = {postJson};"],"sourceRoot":""}